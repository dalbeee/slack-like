// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String            @id @default(uuid())
  email      String
  password   String
  name       String
  timezone   String?
  status     String?
  pictureSrc String?
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
  workspaces Workspace[]
  channels   Channel[]
  reactions  MessageReaction[]
  messages   Message[]
}

model Workspace {
  id          String    @id @default(uuid())
  name        String
  description String?
  users       User[]
  channels    Channel[]
  messages    Message[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum ChannelType {
  PUBLIC
  PRIVATE
  DIRECT_MESSAGE
}

model Channel {
  id          String    @id @default(uuid())
  type        ChannelType @default(PUBLIC)
  password    String?
  workspaceId String
  WorkSpace   Workspace @relation(fields: [workspaceId], references: [id])
  name        String
  description String?
  Users       User[]
  Messages    Message[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Message {
  id          String            @id @default(uuid())
  content     String
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  ancestorId  String?           @unique
  ancestor    Message?          @relation("thread", fields: [ancestorId], references: [id])
  children    Message[]         @relation("thread")
  reactions   MessageReaction[]
  user        User              @relation(fields: [userId], references: [id])
  userId      String
  workspace   Workspace         @relation(fields: [workspaceId], references: [id])
  workspaceId String
  channel     Channel           @relation(fields: [channelId], references: [id])
  channelId   String

  @@index([id, createdAt])
}

model File {
  id               String   @id @default(uuid())
  originalFileName String
  createdAt        DateTime @default(now())

  @@index([id, originalFileName, createdAt])
}

model MessageReaction {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  message   Message  @relation(fields: [messageId], references: [id])
  messageId String
  content   String
  createdAt DateTime @default(now())

  @@index([messageId, userId])
}

model Invitation {
  id            String   @id @default(uuid())
  inviterUserId String
  inviteeEmail  String
  workspaceId   String
  activateCode  String
  expiredDate   DateTime
  createdAt     DateTime @default(now())
}
